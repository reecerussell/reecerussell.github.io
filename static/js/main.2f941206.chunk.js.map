{"version":3,"sources":["_content.ts","assets/profile.JPG","routes.ts","_nav.ts","components/navigation.tsx","components/mobile-navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["meta","baseTitle","socials","url","title","icon","about","info","name","value","body","header","text","skills","progress","services","description","resume","education","date","start","finish","experience","copyrightText","Date","getFullYear","module","exports","routes","path","component","React","lazy","Navigation","pathname","useLocation","className","nav","map","item","key","classNames","active","to","MobileNavigation","useState","isOpen","setOpen","toggle","redirectLocation","setRedirect","navigate","e","preventDefault","target","dataset","length","href","data-target","onClick","type","open","dangerouslySetInnerHTML","__html","content","App","Container","Row","Col","lg","md","Card","id","src","profilePicture","alt","CardHeader","tag","CardBody","fallback","route","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2f941206.chunk.js","sourcesContent":["export interface AboutInfoProps {\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport default {\r\n    meta: {\r\n        baseTitle:\r\n            \"Reece Russell | Software Developer | C#, .NET Core, Go, JavaScript\",\r\n    },\r\n    socials: [\r\n        {\r\n            url: \"https://www.instagram.com/_reecerussell/\",\r\n            title: \"Instagram\",\r\n            icon: \"la-instagram\",\r\n        },\r\n        {\r\n            url: \"https://twitter.com/_reecerussell\",\r\n            title: \"Twitter\",\r\n            icon: \"la-twitter\",\r\n        },\r\n        {\r\n            url:\r\n                \"https://www.linkedin.com/in/reece-russell-software-developer/\",\r\n            title: \"LinkedIn\",\r\n            icon: \"la-linkedin-in\",\r\n        },\r\n        {\r\n            url: \"https://github.com/reecerussell\",\r\n            title: \"GitHub\",\r\n            icon: \"la-github\",\r\n        },\r\n    ],\r\n    about: {\r\n        title: \"About Me\",\r\n        info: [\r\n            {\r\n                name: \"Name\",\r\n                value: \"Reece Russell\",\r\n            },\r\n            {\r\n                name: \"Email\",\r\n                value: \"me@reece-russell.co.uk\",\r\n            },\r\n            {\r\n                name: \"Job\",\r\n                value: \"Software Developer\",\r\n            },\r\n        ],\r\n        body: {\r\n            header: \"I am a developer\",\r\n            text: `<p>A highly motivated, self-taught software developer working\r\n            with .NET Framework and .NET Core. I started with JavaScript\r\n            when I was 12 and have since explored into .NET and Go. I\r\n            have two, level 4 diplomas from BCS, in software development\r\n            methodologies and software languages, which I believe I was\r\n            the youngest in the country to complete.</p>`,\r\n        },\r\n        skills: [\r\n            {\r\n                title: \"C# / .NET Core 1\",\r\n                progress: 90,\r\n            },\r\n            {\r\n                title: \"Go\",\r\n                progress: 65,\r\n            },\r\n            {\r\n                title: \"JavaScript / ReactJS\",\r\n                progress: 80,\r\n            },\r\n            {\r\n                title: \"SQL\",\r\n                progress: 70,\r\n            },\r\n        ],\r\n        services: [\r\n            {\r\n                icon: \"la-apple\",\r\n                header: \"Applications\",\r\n                description: \"Lots of world-class applications.\",\r\n            },\r\n        ],\r\n    },\r\n    resume: {\r\n        title: \"My Resume\",\r\n        education: [\r\n            {\r\n                title: \"Level 4 Diplma Soft. Langs\",\r\n                date: {\r\n                    start: \"2018\",\r\n                    finish: \"2019\",\r\n                },\r\n                description: \"lorem ipsum\",\r\n            },\r\n        ],\r\n        experience: [\r\n            {\r\n                title: \"Level 4 Diplma Soft. Langs\",\r\n                date: {\r\n                    start: \"2018\",\r\n                    finish: \"2019\",\r\n                },\r\n                description: \"lorem ipsum\",\r\n            },\r\n        ],\r\n    },\r\n    copyrightText: `Copyright &copy; ${new Date().getFullYear()} - All rights reserved`,\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/profile.0e79ce54.JPG\";","import React from \"react\";\r\nimport { RouteProps } from \"react-router-dom\";\r\n\r\nconst AboutView = React.lazy(() => import(\"./views/about\"));\r\nconst ResumeView = React.lazy(() => import(\"./views/resume\"));\r\n\r\nconst routes: RouteProps[] = [\r\n    {\r\n        path: \"/\",\r\n        component: AboutView,\r\n    },\r\n    {\r\n        path: \"/resume\",\r\n        component: ResumeView,\r\n    },\r\n];\r\n\r\nexport default routes;\r\n","export default [\r\n    {\r\n        text: \"About\",\r\n        path: \"/\",\r\n    },\r\n    {\r\n        text: \"Resume\",\r\n        path: \"/resume\",\r\n    },\r\n    {\r\n        text: \"Portfolio\",\r\n        path: \"/portfolio\",\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport nav from \"../_nav\";\r\n\r\nconst Navigation = () => {\r\n    const { pathname } = useLocation();\r\n\r\n    return (\r\n        <nav className=\"r-shadow main-bar\">\r\n            <ul>\r\n                {nav.map((item, key) => (\r\n                    <li\r\n                        key={key}\r\n                        className={classNames({\r\n                            active: pathname === item.path,\r\n                        })}\r\n                    >\r\n                        <Link to={item.path}>{item.text}</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport nav from \"../_nav\";\r\nimport content from \"../_content\";\r\n\r\nconst MobileNavigation = () => {\r\n    const { pathname } = useLocation();\r\n    const [isOpen, setOpen] = useState(false);\r\n    const toggle = () => setOpen(!isOpen);\r\n    const [redirectLocation, setRedirect] = useState(\"\");\r\n\r\n    const navigate = (e: any) => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n        setRedirect(e.target.dataset.target);\r\n    };\r\n\r\n    if (redirectLocation === pathname) {\r\n        setRedirect(\"\");\r\n    }\r\n\r\n    if (redirectLocation.length > 0) {\r\n        return <Redirect to={redirectLocation} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"r-shadow mobile-bar\">\r\n                <a\r\n                    href=\"#\"\r\n                    data-target=\"/\"\r\n                    className=\"brand\"\r\n                    onClick={navigate}\r\n                >\r\n                    Reece Russell\r\n                </a>\r\n                <div className=\"mobile-nav-toggle\">\r\n                    <button\r\n                        type=\"button\"\r\n                        title=\"Toggle Mobile Navigation\"\r\n                        onClick={toggle}\r\n                    >\r\n                        <i className=\"las la-bars\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <aside\r\n                className={classNames(\"mobile-navigation\", { open: isOpen })}\r\n            >\r\n                <div className=\"brand\">\r\n                    Reece Russell\r\n                    <button\r\n                        type=\"button\"\r\n                        title=\"Toggle Mobile Navigation\"\r\n                        onClick={toggle}\r\n                    >\r\n                        <i className=\"las la-bars\"></i>\r\n                    </button>\r\n                </div>\r\n                <nav>\r\n                    <ul>\r\n                        {nav.map((item, key) => (\r\n                            <li\r\n                                key={key}\r\n                                className={classNames({\r\n                                    active: pathname === item.path,\r\n                                })}\r\n                            >\r\n                                <a\r\n                                    href=\"#\"\r\n                                    data-target={item.path}\r\n                                    onClick={navigate}\r\n                                >\r\n                                    {item.text}\r\n                                </a>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </nav>\r\n                <footer>\r\n                    <p\r\n                        dangerouslySetInnerHTML={{\r\n                            __html: content.copyrightText,\r\n                        }}\r\n                    ></p>\r\n                </footer>\r\n            </aside>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MobileNavigation;\r\n","import React, { Suspense } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport routes from \"./routes\";\nimport content from \"./_content\";\nimport * as profilePicture from \"./assets/profile.JPG\";\nimport \"./App.scss\";\nimport Navigation from \"./components/navigation\";\nimport MobileNavigation from \"./components/mobile-navigation\";\n\nconst App = () => (\n    <Router>\n        <MobileNavigation />\n        <Container>\n            <Row>\n                <Col lg=\"3\" md=\"4\">\n                    <Card id=\"profile\">\n                        <img src={profilePicture} alt=\"Profile Picture\" />\n                        <CardHeader tag=\"header\" id=\"heading\">\n                            <h2>Reece Russell</h2>\n                            <h4>Software Developer</h4>\n                        </CardHeader>\n                        <CardBody id=\"socials\">\n                            <div className=\"r-social-links\">\n                                {content.socials.map((item, key) => (\n                                    <a\n                                        href={item.url}\n                                        title={item.title}\n                                        key={key}\n                                    >\n                                        <i\n                                            className={classNames(\n                                                \"lab\",\n                                                item.icon\n                                            )}\n                                        />\n                                    </a>\n                                ))}\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col lg=\"9\" md=\"8\">\n                    <Navigation />\n\n                    <Switch>\n                        <Suspense fallback={<p>Loading...</p>}>\n                            {routes.map((route, key) => (\n                                <Route {...route} exact key={key} />\n                            ))}\n                        </Suspense>\n                    </Switch>\n                </Col>\n            </Row>\n        </Container>\n    </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}